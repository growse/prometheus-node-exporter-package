---
env:
  PACKAGE_NAME: prometheus-node-exporter
  APT_DEPENDENCIES: ""

name: Build, package and publish
"on":
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y ${APT_DEPENDENCIES}
        if: ${{ env.APT_DEPENDENCIES != '' }}
      - name: Set up Golang
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version: 1.21
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Make deb package
        run: make -j$(nproc) package
        env:
          BUILD_NUMBER: ${{ github.run_number }}
      - name: Upload deb file
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3
        with:
          name: deb
          path: "*.deb"
  publish:
    name: Publish
    runs-on: ubuntu-22.04
    if: github.event_name != 'pull_request'
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
      - name: Download deb artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        with:
          name: deb
      - name: Upload to Apt repo
        env:
          APT_CREDENTIALS: ${{ secrets.APT_CREDENTIALS }}
          APT_KEY_PASSPHRASE: ${{ secrets.APT_KEY_PASSPHRASE }}
        run: |
          echo $APT_CREDENTIALS > aptly-auth
          find -type f -name "*.deb" -exec curl -f --netrc-file aptly-auth -XPOST -F file=@{} https://apttoo.growse.com/api/files/${PACKAGE_NAME} \;
          export result=$(curl -f --netrc-file aptly-auth -X POST https://apttoo.growse.com/api/repos/defaultrepo/file/${PACKAGE_NAME})
          echo $result
          export failed=$(echo $result | jq '.FailedFiles | length')
          if [[ "$failed" != "0" ]]; then exit 1; fi
          curl -f --netrc-file aptly-auth -X PUT -H"Content-type: application/json" --data '{"Signing":{"Passphrase":"'"$APT_KEY_PASSPHRASE"'","Batch":true}}' https://apttoo.growse.com/api/publish/:./stablish
